---------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  G:\econ_6219_fe\ps1\economic_forecasting_ex2.log
  log type:  text
 opened on:   7 Jan 2023, 00:04:36

. 
. /***************************************************************
> * Load Data
> ***************************************************************/
. 
. 
. ************Problem 1
. *Part A.
.         ssc install freduse, replace
checking freduse consistency and verifying not already installed...
all files already exist and are up to date.

.         ssc install tsmktim, replace
checking tsmktim consistency and verifying not already installed...
all files already exist and are up to date.

. 
.         freduse INDPRO
(1,247 observations read)

.         
. *generates a time variable, labeled as datem, that converts the variable daten to be in months, and sets datem to time series d
> ata
.         gen datem = mofd(daten)

.         format datem %tm

.         tsset datem

Time variable: datem, 1919m1 to 2022m11
        Delta: 1 month

. 
. *Time plot of the data for industrial production, changes the graph name, and changes the x-axis and y-axis labels
.         tsline INDPRO if tin(1972m1, 2017m12), name(q1_parta) xtitle("Date") ytitle("Output") ///
>         title("U.S. Industrial  Production")

.         graph export "`output'q1_parta.wmf", name(graph_parta) as(wmf) replace
file G:\econ_6219_fe\ps1\q1_parta.wmf saved as Windows Metafile format

.         
. *Part B.
.         clear

.         ssc install freduse, replace
checking freduse consistency and verifying not already installed...
all files already exist and are up to date.

.         ssc install tsmktim
checking tsmktim consistency and verifying not already installed...
all files already exist and are up to date.

.         
.         freduse IPGMFN
(611 observations read)

.         
. *generates a time variable, labeled as datem, that converts the variable daten to be in months, and sets datem to time series d
> ata
.         gen datem = mofd(daten)

.         format datem %tm

.         tsset datem

Time variable: datem, 1972m1 to 2022m11
        Delta: 1 month

. 
. *Time plot of the data for industrial production, changes the graph name, and changes the x-axis and y-axis labels
.         tsline IPGMFN if tin(1972m1, 2017m12), name(q1_partb) xtitle("Date") ytitle("Output") ///
>         title("U.S. Industrial  Production: Manufacturing (NAICS)")

.         graph export "`output'q1_partb.wmf", name(graph_partb) as(wmf) replace
file G:\econ_6219_fe\ps1\q1_partb.wmf saved as Windows Metafile format

.         
. *Part C.
.         clear

.         ssc install freduse, replace
checking freduse consistency and verifying not already installed...
all files already exist and are up to date.

.         ssc install tsmktim
checking tsmktim consistency and verifying not already installed...
all files already exist and are up to date.

.         
.         freduse INDPRO IPGMFN
(1,247 observations read)
(611 observations read)

. 
. *generates a time variable, labeled as datem, that converts the variable daten to be in months, and sets datem to time series d
> ata
.         gen datem = mofd(daten)

.         format datem %tm

.         tsset datem

Time variable: datem, 1919m1 to 2022m11
        Delta: 1 month

.         
.         gen ln_indpro = log(INDPRO)

.         gen ln_ipgmfn = log(IPGMFN)
(636 missing values generated)

. 
. *Time plot of the data for industrial production, changes the graph name, and changes the x-axis and y-axis labels
.         tsline ln_indpro ln_ipgmfn if tin(1972m1, 2017m12), name(q1_partc) xtitle("Date") ytitle("Log of Output") title("Growth
>  Rate of U.S. Industrial Production")

.         graph export "`output'q1_partc.wmf", name(graph_partc) as(wmf) replace
file G:\econ_6219_fe\ps1\q1_partc.wmf saved as Windows Metafile format

. 
.         
. ************Problem 2
. * Monte Carlo simulation
. clear all

. 
.         program findmean, rclass
  1.                 drop _all
  2.                 set obs 100
  3.                 gen x = rnormal(-1,sqrt(2))
  4.                 quietly summarize x, detail
  5.                 return scalar mu = r(mean)
  6.                 return scalar med = r(p50)
  7.         end

. 
. *Part A/B.
.         set seed 6219

.         simulate xmean=r(mu) xmedian=r(med), reps(5000): findmean

      Command: findmean
        xmean: r(mu)
      xmedian: r(med)

Simulations (5,000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
.................................................. 1,000
.................................................. 1,050
.................................................. 1,100
.................................................. 1,150
.................................................. 1,200
.................................................. 1,250
.................................................. 1,300
.................................................. 1,350
.................................................. 1,400
.................................................. 1,450
.................................................. 1,500
.................................................. 1,550
.................................................. 1,600
.................................................. 1,650
.................................................. 1,700
.................................................. 1,750
.................................................. 1,800
.................................................. 1,850
.................................................. 1,900
.................................................. 1,950
.................................................. 2,000
.................................................. 2,050
.................................................. 2,100
.................................................. 2,150
.................................................. 2,200
.................................................. 2,250
.................................................. 2,300
.................................................. 2,350
.................................................. 2,400
.................................................. 2,450
.................................................. 2,500
.................................................. 2,550
.................................................. 2,600
.................................................. 2,650
.................................................. 2,700
.................................................. 2,750
.................................................. 2,800
.................................................. 2,850
.................................................. 2,900
.................................................. 2,950
.................................................. 3,000
.................................................. 3,050
.................................................. 3,100
.................................................. 3,150
.................................................. 3,200
.................................................. 3,250
.................................................. 3,300
.................................................. 3,350
.................................................. 3,400
.................................................. 3,450
.................................................. 3,500
.................................................. 3,550
.................................................. 3,600
.................................................. 3,650
.................................................. 3,700
.................................................. 3,750
.................................................. 3,800
.................................................. 3,850
.................................................. 3,900
.................................................. 3,950
.................................................. 4,000
.................................................. 4,050
.................................................. 4,100
.................................................. 4,150
.................................................. 4,200
.................................................. 4,250
.................................................. 4,300
.................................................. 4,350
.................................................. 4,400
.................................................. 4,450
.................................................. 4,500
.................................................. 4,550
.................................................. 4,600
.................................................. 4,650
.................................................. 4,700
.................................................. 4,750
.................................................. 4,800
.................................................. 4,850
.................................................. 4,900
.................................................. 4,950
.................................................. 5,000

.         
.         gen smean_bias = xmean+1

.         gen smedian_bias = xmedian+1

.         summarize, detail

                            r(mu)
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -1.336852      -1.550657
 5%    -1.231915      -1.502916
10%    -1.178755      -1.479418       Obs               5,000
25%     -1.09399      -1.464529       Sum of wgt.       5,000

50%    -1.000471                      Mean          -1.000328
                        Largest       Std. dev.      .1405898
75%    -.9061102      -.5926968
90%    -.8186465      -.5832513       Variance       .0197655
95%    -.7702168      -.5598732       Skewness      -.0640003
99%    -.6814846      -.4621855       Kurtosis       3.002239

                           r(med)
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -1.409499      -1.637296
 5%    -1.292199      -1.629403
10%    -1.227982      -1.557177       Obs               5,000
25%    -1.122236      -1.540094       Sum of wgt.       5,000

50%    -1.003142                      Mean          -1.002358
                        Largest       Std. dev.      .1755834
75%    -.8770337      -.4682474
90%    -.7797345      -.4534649       Variance       .0308295
95%    -.7179845      -.4252262       Skewness       -.024258
99%    -.5962797      -.3268192       Kurtosis       2.899953

                         smean_bias
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.3368517      -.5506572
 5%    -.2319152      -.5029165
10%    -.1787552      -.4794177       Obs               5,000
25%    -.0939904      -.4645292       Sum of wgt.       5,000

50%    -.0004711                      Mean          -.0003275
                        Largest       Std. dev.      .1405898
75%     .0938898       .4073032
90%     .1813535       .4167487       Variance       .0197655
95%     .2297832       .4401268       Skewness      -.0640003
99%     .3185154       .5378145       Kurtosis       3.002239

                        smedian_bias
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.4094994      -.6372964
 5%    -.2921992      -.6294032
10%    -.2279818      -.5571771       Obs               5,000
25%    -.1222364      -.5400945       Sum of wgt.       5,000

50%    -.0031419                      Mean          -.0023583
                        Largest       Std. dev.      .1755834
75%     .1229663       .5317526
90%     .2202655       .5465351       Variance       .0308295
95%     .2820155       .5747738       Skewness       -.024258
99%     .4037203       .6731808       Kurtosis       2.899953

. 
. *Part C.
. clear all

.         
.         program findmean, rclass
  1.                 drop _all
  2.                 set obs 100
  3.                 gen x = rnormal(-1,sqrt(2))
  4.                 gen y = exp(x)
  5.                 quietly summarize y, detail
  6.                 return scalar mu = r(mean)
  7.                 return scalar med = r(p50)
  8.         end

.         
.         set seed 6219

.         simulate ymean=r(mu) ymedian=r(med), reps(5000): findmean

      Command: findmean
        ymean: r(mu)
      ymedian: r(med)

Simulations (5,000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
.................................................. 1,000
.................................................. 1,050
.................................................. 1,100
.................................................. 1,150
.................................................. 1,200
.................................................. 1,250
.................................................. 1,300
.................................................. 1,350
.................................................. 1,400
.................................................. 1,450
.................................................. 1,500
.................................................. 1,550
.................................................. 1,600
.................................................. 1,650
.................................................. 1,700
.................................................. 1,750
.................................................. 1,800
.................................................. 1,850
.................................................. 1,900
.................................................. 1,950
.................................................. 2,000
.................................................. 2,050
.................................................. 2,100
.................................................. 2,150
.................................................. 2,200
.................................................. 2,250
.................................................. 2,300
.................................................. 2,350
.................................................. 2,400
.................................................. 2,450
.................................................. 2,500
.................................................. 2,550
.................................................. 2,600
.................................................. 2,650
.................................................. 2,700
.................................................. 2,750
.................................................. 2,800
.................................................. 2,850
.................................................. 2,900
.................................................. 2,950
.................................................. 3,000
.................................................. 3,050
.................................................. 3,100
.................................................. 3,150
.................................................. 3,200
.................................................. 3,250
.................................................. 3,300
.................................................. 3,350
.................................................. 3,400
.................................................. 3,450
.................................................. 3,500
.................................................. 3,550
.................................................. 3,600
.................................................. 3,650
.................................................. 3,700
.................................................. 3,750
.................................................. 3,800
.................................................. 3,850
.................................................. 3,900
.................................................. 3,950
.................................................. 4,000
.................................................. 4,050
.................................................. 4,100
.................................................. 4,150
.................................................. 4,200
.................................................. 4,250
.................................................. 4,300
.................................................. 4,350
.................................................. 4,400
.................................................. 4,450
.................................................. 4,500
.................................................. 4,550
.................................................. 4,600
.................................................. 4,650
.................................................. 4,700
.................................................. 4,750
.................................................. 4,800
.................................................. 4,850
.................................................. 4,900
.................................................. 4,950
.................................................. 5,000

.         
.         gen smean_bias2 = ymean-1

.         gen smedian_bias2 = ymedian-1

.         summarize, detail

                            r(mu)
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .6109588        .500175
 5%     .6896025       .5037712
10%     .7376716       .5083175       Obs               5,000
25%     .8345756        .509377       Sum of wgt.       5,000

50%     .9593815                      Mean            1.00567
                        Largest       Std. dev.      .2859106
75%     1.118677       4.254641
90%     1.310578       4.340088       Variance       .0817449
95%     1.454491       6.150612       Skewness       5.402133
99%     1.824515       7.498726       Kurtosis       88.94567

                           r(med)
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .2442765       .1945058
 5%     .2748112       .1960465
10%     .2930143       .2107337       Obs               5,000
25%     .3256424       .2144704       Sum of wgt.       5,000

50%     .3668547                      Mean           .3728189
                        Largest       Std. dev.      .0657745
75%     .4162321       .6261464
90%     .4587524       .6359828       Variance       .0043263
95%     .4878296       .6536595       Skewness       .4858539
99%     .5509161       .7216309       Kurtosis       3.354239

                         smean_bias2
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.3890412       -.499825
 5%    -.3103975      -.4962288
10%    -.2623284      -.4916825       Obs               5,000
25%    -.1654244       -.490623       Sum of wgt.       5,000

50%    -.0406185                      Mean             .00567
                        Largest       Std. dev.      .2859106
75%     .1186775       3.254641
90%     .3105782       3.340088       Variance       .0817449
95%     .4544907       5.150612       Skewness       5.402133
99%     .8245146       6.498726       Kurtosis       88.94567

                        smedian_bias2
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.7557235      -.8054942
 5%    -.7251888      -.8039535
10%    -.7069857      -.7892663       Obs               5,000
25%    -.6743576      -.7855296       Sum of wgt.       5,000

50%    -.6331452                      Mean          -.6271811
                        Largest       Std. dev.      .0657745
75%    -.5837679      -.3738536
90%    -.5412476      -.3640172       Variance       .0043263
95%    -.5121704      -.3463405       Skewness       .4858539
99%    -.4490839      -.2783691       Kurtosis       3.354239

.         
.         
. ************Problem 3
. * Replcating results in http://econbrowser.com/archives/2014/01/on_rsquared_and
. clear all

. 
. *Part A
. use "`path'\SPShiller.dta", clear

. 
.         gen time = tm(1871m1) + _n-1

.         format time %tm

.         tsset time

Time variable: time, 1871m1 to 2018m5
        Delta: 1 month

.         rename var1 p

.         
. //regressing the stock price on last periods stock price
.         reg p L1.p if tin(1953m4, 2013m12)

      Source |       SS           df       MS      Number of obs   =       729
-------------+----------------------------------   F(1, 727)       >  99999.00
       Model |   181189993         1   181189993   Prob > F        =    0.0000
    Residual |  453508.784       727  623.808506   R-squared       =    0.9975
-------------+----------------------------------   Adj R-squared   =    0.9975
       Total |   181643502       728  249510.305   Root MSE        =    24.976

------------------------------------------------------------------------------
           p | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
           p |
         L1. |   1.003282   .0018616   538.94   0.000     .9996273    1.006937
             |
       _cons |   .9466052   1.255869     0.75   0.451    -1.518957    3.412167
------------------------------------------------------------------------------

. //regressing the change in stock price on last periods stock price
.         reg D.p L1.p  if tin(1953m4, 2013m12)

      Source |       SS           df       MS      Number of obs   =       729
-------------+----------------------------------   F(1, 727)       =      3.11
       Model |  1938.99747         1  1938.99747   Prob > F        =    0.0783
    Residual |  453508.784       727  623.808506   R-squared       =    0.0043
-------------+----------------------------------   Adj R-squared   =    0.0029
       Total |  455447.781       728  625.615084   Root MSE        =    24.976

------------------------------------------------------------------------------
         D.p | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
           p |
         L1. |    .003282   .0018616     1.76   0.078    -.0003727    .0069368
             |
       _cons |   .9466052   1.255869     0.75   0.451    -1.518957    3.412167
------------------------------------------------------------------------------

. 
. *Part B
. clear all

. 
.         freduse GS10
(837 observations read)
note: label truncated to 80 characters

. 
.         gen datem = mofd(daten)

.         format datem %tm

.         tsset datem

Time variable: datem, 1953m4 to 2022m12
        Delta: 1 month

.         rename GS10 r

. 
. //regressing the interest rate on the previous three months
.         reg r L(1/3).r if tin(1953m4, 2013m12)

      Source |       SS           df       MS      Number of obs   =       726
-------------+----------------------------------   F(3, 722)       =  28307.48
       Model |  5526.82921         3   1842.2764   Prob > F        =    0.0000
    Residual |  46.9884088       722  .065080899   R-squared       =    0.9916
-------------+----------------------------------   Adj R-squared   =    0.9915
       Total |  5573.81762       725   7.6880243   Root MSE        =    .25511

------------------------------------------------------------------------------
           r | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
           r |
         L1. |   1.370355   .0363631    37.69   0.000     1.298965    1.441745
         L2. |  -.5889166   .0586691   -10.04   0.000     -.704099   -.4737343
         L3. |   .2135858   .0363561     5.87   0.000     .1422096     .284962
             |
       _cons |   .0302642    .023024     1.31   0.189    -.0149378    .0754662
------------------------------------------------------------------------------

. //regressing the change in the interest rate on the previous three months
.         reg D.r L(1/3).r if tin(1953m4, 2013m12)

      Source |       SS           df       MS      Number of obs   =       726
-------------+----------------------------------   F(3, 722)       =     39.03
       Model |  7.62063045         3  2.54021015   Prob > F        =    0.0000
    Residual |  46.9884088       722  .065080899   R-squared       =    0.1395
-------------+----------------------------------   Adj R-squared   =    0.1360
       Total |  54.6090393       725  .075322813   Root MSE        =    .25511

------------------------------------------------------------------------------
         D.r | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
           r |
         L1. |   .3703547   .0363631    10.18   0.000     .2989648    .4417447
         L2. |  -.5889166   .0586691   -10.04   0.000     -.704099   -.4737343
         L3. |   .2135858   .0363561     5.87   0.000     .1422096     .284962
             |
       _cons |   .0302642    .023024     1.31   0.189    -.0149378    .0754662
------------------------------------------------------------------------------

. 
. *Part C
. clear all

. 
. //generates y by sampling 100 observations from a N(0,1) distribution
. //returns the R2 for (i) a regression of y on the lagged value of y,
. //(ii) a regression of the difference in y on the lagged value of y
. program findrsq, rclass
  1.         drop _all
  2.         set obs 100
  3.         gen time= _n
  4.         tsset time
  5.         gen y = rnormal(0,1)
  6.         quietly regress y L.y
  7.         return scalar rsq = e(r2)
  8.         quietly regress D.y L.y
  9.         return scalar rsqdiff = e(r2)
 10. end

. 
.         set seed 6219

.         simulate r2=r(rsq) r2diff=r(rsqdiff), reps(1000): findrsq

      Command: findrsq
           r2: r(rsq)
       r2diff: r(rsqdiff)

Simulations (1,000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
.................................................. 1,000

.         summarize

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
          r2 |      1,000    .0098684    .0130894   7.45e-09   .0871385
      r2diff |      1,000    .5067238    .0495061   .3497049   .6443531

.         
.         
. //close the log file    
. log close
      name:  <unnamed>
       log:  G:\econ_6219_fe\ps1\economic_forecasting_ex2.log
  log type:  text
 closed on:   7 Jan 2023, 00:06:21
---------------------------------------------------------------------------------------------------------------------------------
